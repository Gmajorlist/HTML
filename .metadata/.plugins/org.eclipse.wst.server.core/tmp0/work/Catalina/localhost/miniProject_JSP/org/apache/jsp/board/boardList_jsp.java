/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-03-09 08:32:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import board.dao.BoardDAO;
import board.bean.BoardPaging;
import board.bean.BoardDTO;
import java.util.List;
import java.util.ArrayList;
import java.text.SimpleDateFormat;

public final class boardList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("board.bean.BoardPaging");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("board.dao.BoardDAO");
    _jspx_imports_classes.add("board.bean.BoardDTO");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

//데이터
	int pg = Integer.parseInt(request.getParameter("pg"));
//DB
	BoardDAO boardDAO = BoardDAO.getInstance();
	List<BoardDTO> list = boardDAO.boardList();
	//List<BoardDAO> list = new ArrayList<BoardDTO>();
// 페이징처리
	int totalA = boardDAO.getTotalA();//총 글수	

	BoardPaging boardPaging = new BoardPaging();
	boardPaging.setCurrentPage(pg);
	boardPaging.setPageBlock(3);
	boardPaging.setPageSize(5);
	boardPaging.setTotalA(totalA);
	
	boardPaging.makePagingHTML();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("<style>\r\n");
      out.write(".subjectA:link {color: magenta; text-decoration: non;}\r\n");
      out.write(".subjectA:visited{color: pink; text-decoration: non;}\r\n");
      out.write(".subjectA:hover{color:green; text-decoration: underline;}\r\n");
      out.write(".subjectA:active{color:orange; text-decoration: non;}\r\n");
      out.write("#currentPaging{\r\n");
      out.write("	color:green;\r\n");
      out.write("	border:1px solid red;\r\n");
      out.write("	padding: 5px 8px;  /*top  bottom ///   left right   */\r\n");
      out.write("	margin: 5px; /*top right bottom left   */\r\n");
      out.write("}\r\n");
      out.write("#paging{\r\n");
      out.write("	color:pink;\r\n");
      out.write("	padding: 5px;\r\n");
      out.write("	margin: 5px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body style=\"background-color:beige\">\r\n");
      out.write("<center>\r\n");
      out.write("<h3>\r\n");
      out.write("<img src=\"../image/vlvlan.png\" width=\"30\" height=\"30\" alt=\"꽃\" \r\n");
      out.write("onclick=\"location.href='../index.jsp'\" style=\"pointer\" >목록\r\n");
      out.write("</h3>\r\n");
      out.write("<table border=\"1\" width=\"500px\" align=\"center\" fram=\"hsides\"rules=\"rows\">\r\n");
      out.write("	<tr>\r\n");
      out.write("		<th width=\"100\">글번호</th>\r\n");
      out.write("		<th width=\"300\">제목</th>\r\n");
      out.write("		<th width=\"150\">작성자</th>\r\n");
      out.write("		<th width=\"100\">조회수</th>\r\n");
      out.write("		<th width=\"150\">작성일</th>\r\n");
      out.write("	</tr>	\r\n");
if(list != null){ 
      out.write('\r');
      out.write('\n');
      out.write('	');
for(BoardDTO boardDTO : list){ 
      out.write("\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td align=\"center\">");
      out.print(boardDTO.getSeq() );
      out.write("</td>\r\n");
      out.write("			<td><a class=\"subjectA\" href=\"\">");
      out.print(boardDTO.getSubject() );
      out.write("</a></td>\r\n");
      out.write("			<td align=\"center\">");
      out.print(boardDTO.getId());
      out.write("</td>\r\n");
      out.write("			<td align=\"center\">");
      out.print(boardDTO.getHit());
      out.write("</td>\r\n");
      out.write("			<td align=\"center\">\r\n");
      out.write("			");
      out.print( new SimpleDateFormat("yyyy.MM.dd.").format(boardDTO.getLogtime()) );
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	");
}//for 
      out.write('\r');
      out.write('\n');
}//if 
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("<div style=\" margin-top:15px width:850px; text-align:center;\">\r\n");
      out.print(boardPaging.getCurrentPage() );
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</center>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function boardPaging(pg)\r\n");
      out.write("	location.href = \"boardList.jsp?pg=\" +pg;\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
